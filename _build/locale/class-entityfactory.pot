# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Bruno Skvorc
# This file is distributed under the same license as the Diffbot PHP Client Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Diffbot PHP Client Documentation 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-10-18 14:41+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../class-entityfactory.rst:11
msgid "EntityFactory"
msgstr ""

#: ../../class-entityfactory.rst:13
msgid "The EntityFactory builds the :php:class:`Swader\\\\Diffbot\\\\Entity\\\\EntityIterator` by providing it with a collection of entities returned by an API, and a Guzzle Response which to consume. It implements the :php:class:`Swader\\\\Diffbot\\\\Interfaces\\\\EntityFactory` interface."
msgstr ""

#: ../../class-entityfactory.rst:15
msgid "The only reason to build your own version of the EntityFactory is to provide it with instructions on how to pair API return types and entities you developed by extending :php:class:`Swader\\\\Diffbot\\\\Abstracts\\\\Entity`."
msgstr ""

#: ../../class-entityfactory.rst:17
msgid "For a concrete example of this, see `this tutorial <http://sitepoint.com/php>`__ on SitePoint, which demonstrates custom \"AuthorFolio\" and \"SitePointArticle\" entities automatically created by calls to a custom API."
msgstr ""

#: ../../class-entityfactory.rst:24
msgid ":hidden:`createAppropriateIterator`"
msgstr ""

#: ../../class-entityfactory.rst:28
msgid "The Guzzle response given by the Guzzle client after an API call's execution"
msgstr ""

#: ../../class-entityfactory.rst:29
msgid ":php:class:`Swader\\\\Diffbot\\\\Entity\\\\EntityIterator`"
msgstr ""

#: ../../class-entityfactory.rst:31
msgid "The only method publicly accessible, and the only method one needs to implement when building one's own EntityFactory, ``createAppropriateIterator`` does what it says - it takes the Guzzle response provided to it, and builds an EntityIterator - a collection of Entities fitting for an API's result."
msgstr ""

