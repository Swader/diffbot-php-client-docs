#
msgid ""
msgstr ""
"Project-Id-Version: Diffbot PHP Client Documentation 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-20 12:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../class-entityiterator.rst:11
msgid "EntityIterator"
msgstr ""

#: ../../class-entityiterator.rst:15
msgid ""
"For example, executing a Product API call on a URL with a product will "
"actually return an EntityIterator instance with a single element instance - "
"a :php:class:`Swader\\\\Diffbot\\\\Entity\\\\Product`. However, the "
"EntityIterator also serves as a proxy to its first element, so accessing a "
"property or a getter on the EntityIterator directly, will in fact access it "
"on the first element. This allows for less verbose constructs. Compare::"
msgstr ""

#: ../../class-entityiterator.rst:20
msgid "And::"
msgstr ""

#: ../../class-entityiterator.rst:27
msgid ""
"Assuming we called the Product API, the above snippets are identical "
"logically, because the Product API only returns a single Product entity."
msgstr ""

#: ../../class-entityiterator.rst:29
msgid ""
"As evident above, the EntityIterator also acts as an array, and thus can be "
"fully iterated through for when APIs return sets of entities rather than "
"just one (see :php:class:`Swader\\\\Diffbot\\\\Api\\\\Image`)."
msgstr ""

#: ../../class-entityiterator.rst:37
msgid ":hidden:`__construct`"
msgstr ""

#: ../../class-entityiterator.rst:41
msgid "An array of entities returned by the API"
msgstr ""

#: ../../class-entityiterator.rst:42
msgid ""
"The original Response object returned by the API, useful for getting raw "
"data if you need to additionally process results"
msgstr ""

#: ../../class-entityiterator.rst:47
msgid ":hidden:`getResponse`"
msgstr ""

#: ../../class-entityiterator.rst:51
msgid "GuzzleHttp\\\\Message\\\\ResponseInterface"
msgstr ""

#: ../../class-entityiterator.rst:53
msgid ""
"Returns the original Guzzle Response object returned by the Guzzle Client "
"after the API call::"
msgstr ""

#: ../../class-entityiterator.rst:13
msgid ""
"The EntityIterator is a collection object containing the appropriate "
"entities (:php:class:`Swader\\\\Diffbot\\\\Abstracts\\\\Entity`) of each "
"API."
msgstr ""

#: ../../class-entityiterator.rst:44
msgid ""
"The EntityIterator is automatically constructed by "
":php:class:`Swader\\\\Diffbot\\\\Factory\\\\Entity` - you'll almost never "
"need to instantiate it yourself. It needs an array of objects, which is an "
"array of Entities (:php:class:`Swader\\\\Diffbot\\\\Abstracts\\\\Entity`) "
"through which one can then iterate when processing results, and a Guzzle "
"Response object which one can use to process the raw return data. See below."
msgstr ""

#~ msgid ""
#~ "The EntityIterator is a collection object containing the appropriate "
#~ "entities (:php:class:`Swader\\\\Diffbot\\\\Abstract\\\\Entity`) of each API."
#~ msgstr ""

#~ msgid ""
#~ "The EntityIterator is automatically constructed by "
#~ ":php:class:`Swader\\\\Diffbot\\\\Factory\\\\Entity` - you'll almost never "
#~ "need to instantiate it yourself. It needs an array of objects, which is an "
#~ "array of Entities (:php:class:`Swader\\\\Diffbot\\\\Abstract\\\\Entity`) "
#~ "through which one can then iterate when processing results, and a Guzzle "
#~ "Response object which one can use to process the raw return data. See below."
#~ msgstr ""

#~ msgid "Description goes here."
#~ msgstr ""

#~ msgid "EntityIterator Class"
#~ msgstr ""
