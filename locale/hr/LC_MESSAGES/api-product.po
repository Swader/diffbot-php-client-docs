#
msgid ""
msgstr ""
"Project-Id-Version: Diffbot PHP Client Documentation 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-07 21:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api-product.rst:11
msgid "Product API"
msgstr ""

#: ../../api-product.rst:31
msgid "Product API Class"
msgstr ""

#: ../../api-product.rst:13
msgid ""
"The Product API is used to parse pages representing products. These can be "
"anything from eBay auction pages and books on Amazon, to leashes and collars"
" in \"mom and pop's pet web shop\"."
msgstr ""

#: ../../api-product.rst:15
msgid ""
"The Product API will attempt to recognize some of the most popular product-"
"related fields in any given product page, including but not limited to:"
msgstr ""

#: ../../api-product.rst:17
msgid "price"
msgstr ""

#: ../../api-product.rst:18
msgid "discount"
msgstr ""

#: ../../api-product.rst:19
msgid "availability status"
msgstr ""

#: ../../api-product.rst:20
msgid "stock level"
msgstr ""

#: ../../api-product.rst:21
msgid ""
"characteristics / stats (like smartphone capacity, battery life, network "
"type...)"
msgstr ""

#: ../../api-product.rst:22
msgid "reviews"
msgstr ""

#: ../../api-product.rst:24
msgid "and much more..."
msgstr ""

#: ../../api-product.rst:26
msgid ""
"For a more thorough walk through the product API, see the `official docs and"
" demo <http://www.diffbot.com/products/automatic/product/>`__."
msgstr ""

#: ../../api-product.rst:28
msgid ""
"The Product API part of the Diffbot PHP client consists of two main classes:"
" the API class, and the Product Entity class. We'll describe them in order. "
"Note that the API class extends "
":php:class:`Swader\\\\Diffbot\\\\Abstracts\\\\Api`, so be sure to read that "
"first if you haven't already."
msgstr ""

#: ../../api-product.rst:37
msgid "Basic Usage::"
msgstr ""

#: ../../api-product.rst:88
msgid "Product Entity Class"
msgstr ""

#: ../../api-product.rst:23
msgid "unique identification number like SKU / ISBN / MPN / UPC..."
msgstr ""

#: ../../api-product.rst:47
msgid ":hidden:`setDiscussion`"
msgstr ""

#: ../../api-product.rst:51 ../../api-product.rst:61 ../../api-product.rst:71
#: ../../api-product.rst:81
msgid "Either ``true`` or ``false``"
msgstr ""

#: ../../api-product.rst:52 ../../api-product.rst:62 ../../api-product.rst:72
#: ../../api-product.rst:82
msgid "$this"
msgstr ""

#: ../../api-product.rst:54
msgid ""
"Whether or not to use the Discussion API to additionally process any "
"detected comment or review threads on the product page. Behaves as if the "
":php:class:`Swader\\\\Diffbot\\\\Api\\\\Discussion` was set to process the "
"page, and merges the returned data with the Product API's results by means "
"of a ``discussion`` field in the result. The field will have all the sub-"
"fields of the usual :php:class:`Swader\\\\Diffbot\\\\Api\\\\Discussion` "
"call; i.e. you will be able to access the "
":php:class:`Swader\\\\Diffbot\\\\Entity\\\\Discussion` entity and all its "
"sub entities via the "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getDiscussion` method."
msgstr ""

#: ../../api-product.rst:57
msgid ":hidden:`setColors`"
msgstr ""

#: ../../api-product.rst:64
msgid ""
"If set to ``true``, the Product API will try to find out the color options "
"of the product, if available. This feature is experimental and often fails "
"even when color options are obvious."
msgstr ""

#: ../../api-product.rst:67
msgid ":hidden:`setAvailability`"
msgstr ""

#: ../../api-product.rst:74
msgid ""
"If set to ``true``, Diffbot will attempt to find out whether or not the "
"product in question is available / in stock."
msgstr ""

#: ../../api-product.rst:77
msgid ":hidden:`setSize`"
msgstr ""

#: ../../api-product.rst:84
msgid ""
"If set to ``true``, Diffbot will attempt to find out which sizes the product"
" is offered in. Similar to "
":php:meth:`Swader\\\\Diffbot\\\\Api\\\\Product::setColors`, this method is "
"unreliable and highly experimental."
msgstr ""

#: ../../api-product.rst:90
msgid ""
"When the Product API is done processing a product (or several) the result "
"will be a Product Entity (i.e. a collection of *one* Product Entities inside"
" an instance of :php:class:`Swader\\\\Diffbot\\\\Entity\\\\EntityIterator`)."
msgstr ""

#: ../../api-product.rst:92
msgid ""
"For an overview of the abstract class all Entities build on, see "
":php:class:`Swader\\\\Diffbot\\\\Abstracts\\\\Entity`."
msgstr ""

#: ../../api-product.rst:94
msgid ""
"Note that the Product entity can also be returned by the "
":php:class:`Swader\\\\Diffbot\\\\Api\\\\Analyze` API in \"product\" mode, or"
" in default mode when processing a URL that contains a product (auto-"
"determined)."
msgstr ""

#: ../../api-product.rst:101
msgid ":hidden:`__construct`"
msgstr ""

#: ../../api-product.rst:105
msgid "The data from which to build the Product entity"
msgstr ""

#: ../../api-product.rst:107
msgid ""
"The Product entity's constructor needs the data to populate its properties "
"(see getters below). This class is automatically instantiated after a "
":php:class:`Swader\\\\Diffbot\\\\Api\\\\Product` or "
":php:class:`Swader\\\\Diffbot\\\\Api\\\\Analyze` call. You probably won't "
"ever need to manually create an instance of this class."
msgstr ""

#: ../../api-product.rst:109
msgid ""
"In the case of the Product entity, the constructor differs from the abstract"
" one (:php:meth:`Swader\\\\Diffbot\\\\Abstracts\\\\Api::__construct`) in "
"that it also looks for the `discussion` key in the result, in order to build"
" a :php:class:`Swader\\\\Diffbot\\\\Entity\\\\Discussion` sub-entity (see "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getDiscussion`)."
msgstr ""

#: ../../api-product.rst:112
msgid ":hidden:`getType`"
msgstr ""

#: ../../api-product.rst:116 ../../api-product.rst:139
#: ../../api-product.rst:173 ../../api-product.rst:182
#: ../../api-product.rst:307 ../../api-product.rst:343
#: ../../api-product.rst:396
msgid "string"
msgstr ""

#: ../../api-product.rst:118
msgid "Will always return \"product\" for products::"
msgstr ""

#: ../../api-product.rst:126
msgid ":hidden:`getText`"
msgstr ""

#: ../../api-product.rst:130 ../../api-product.rst:217
#: ../../api-product.rst:226 ../../api-product.rst:235
#: ../../api-product.rst:244 ../../api-product.rst:253
#: ../../api-product.rst:298
msgid "string | null"
msgstr ""

#: ../../api-product.rst:132
msgid ""
"Returns the plaintext content of the processed product page. HTML tags are "
"stripped completely, images are removed. If the text property is missing in "
"the result, returns ``null``."
msgstr ""

#: ../../api-product.rst:135
msgid ":hidden:`getRegularPrice`"
msgstr ""

#: ../../api-product.rst:141
msgid ""
"Returns regular price as string, e.g. \"$23.99\" or \"32 kn\". If not found,"
" returns offerPrice instead - see "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getOfferPrice`."
msgstr ""

#: ../../api-product.rst:144
msgid ":hidden:`getRegularPriceDetails`"
msgstr ""

#: ../../api-product.rst:148 ../../api-product.rst:191
#: ../../api-product.rst:262 ../../api-product.rst:274
#: ../../api-product.rst:353
msgid "array"
msgstr ""

#: ../../api-product.rst:150
msgid ""
"Separates regularPrice into components like currency, amount, and full "
"string. If not found, serves as alias for "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getOfferPriceDetails`."
msgstr ""

#: ../../api-product.rst:152 ../../api-product.rst:195
#: ../../api-product.rst:357
msgid "Usage::"
msgstr ""

#: ../../api-product.rst:169
msgid ":hidden:`getShippingAmount`"
msgstr ""

#: ../../api-product.rst:175
msgid "Returns shipping price as string, e.g. \"$5.99\"."
msgstr ""

#: ../../api-product.rst:178
msgid ":hidden:`getSaveAmount`"
msgstr ""

#: ../../api-product.rst:184
msgid ""
"Returns difference between regular price and offer price, as string, e.g. "
"\"$5.99\"."
msgstr ""

#: ../../api-product.rst:187
msgid ":hidden:`getSaveAmountDetails`"
msgstr ""

#: ../../api-product.rst:193
msgid ""
"Separates saveAmount into components like currency, amount, and full string,"
" much like "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getRegularPriceDetails`. "
"One of the array keys is also a flag indicating whether or not the save "
"amount is a percentage value."
msgstr ""

#: ../../api-product.rst:213
msgid ":hidden:`getProductId`"
msgstr ""

#: ../../api-product.rst:219
msgid ""
"Diffbot-determined unique product ID. If upc, isbn, mpn or sku are "
"identified on the page, productId will select from these values in the above"
" order. Null if none found."
msgstr ""

#: ../../api-product.rst:222
msgid ":hidden:`getUpc`"
msgstr ""

#: ../../api-product.rst:228
msgid "UPC number, if found."
msgstr ""

#: ../../api-product.rst:231
msgid ":hidden:`getMpn`"
msgstr ""

#: ../../api-product.rst:237
msgid "MPN number, if found."
msgstr ""

#: ../../api-product.rst:240
msgid ":hidden:`getIsbn`"
msgstr ""

#: ../../api-product.rst:246
msgid "ISBN number, if found."
msgstr ""

#: ../../api-product.rst:249
msgid ":hidden:`getSku`"
msgstr ""

#: ../../api-product.rst:255
msgid ""
"Returns Stock Keeping Unit -- store/vendor inventory number or identifier if"
" available. If not, returns null."
msgstr ""

#: ../../api-product.rst:258
msgid ":hidden:`getSpecs`"
msgstr ""

#: ../../api-product.rst:264
msgid ""
"If a specifications table or similar data is available on the product page, "
"individual specifications will be returned in the specs object as name/value"
" pairs. Names will be normalized to lowercase with spaces replaced by "
"underscores, e.g. display_resolution."
msgstr ""

#: ../../api-product.rst:266
msgid "If no specs table is found, an empty array will be returned."
msgstr ""

#: ../../api-product.rst:270
msgid ":hidden:`getImages`"
msgstr ""

#: ../../api-product.rst:276
msgid ""
"An array of images found on the product page, with their details. The "
"elements of the array are arrays like this one::"
msgstr ""

#: ../../api-product.rst:291
msgid ""
"Unlike the :php:class:`Swader\\\\Diffbot\\\\Api\\\\Discussion` API which "
"returns details about discussion posts even when used with the "
":php:class:`Swader\\\\Diffbot\\\\Api\\\\Product` API, the image data "
"returned with this method is minimal. For fuller details about images, use "
"the :php:class:`Swader\\\\Diffbot\\\\Api\\\\Image` API."
msgstr ""

#: ../../api-product.rst:294
msgid ":hidden:`getPrefixCode`"
msgstr ""

#: ../../api-product.rst:300
msgid ""
"Country of origin as identified by UPC/ISBN, e.g. \"United Kingdom\". Null "
"if not present."
msgstr ""

#: ../../api-product.rst:303
msgid ":hidden:`getProductOrigin`"
msgstr ""

#: ../../api-product.rst:309
msgid ""
"If available, two-character ISO country code where the product was produced "
"(e.g. \"gb\"). Null if not present."
msgstr ""

#: ../../api-product.rst:312
msgid ":hidden:`getPriceRange`"
msgstr ""

#: ../../api-product.rst:316 ../../api-product.rst:325
#: ../../api-product.rst:378 ../../api-product.rst:387
msgid "array | null"
msgstr ""

#: ../../api-product.rst:318
msgid ""
"If the product is available in a range of prices, the minimum and maximum "
"values will be returned. The lowest price will also be returned as the "
"offerPrice (see "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getOfferPrice`). If no "
"range is detected, returns null."
msgstr ""

#: ../../api-product.rst:321
msgid ":hidden:`getQuantityPrices`"
msgstr ""

#: ../../api-product.rst:327
msgid ""
"If the product is available with quantity-based discounts, all identifiable "
"price points will be returned. The lowest price will also be returned as the"
" offerPrice (see "
":php:meth:`Swader\\\\Diffbot\\\\Entity\\\\Product::getOfferPrice`). If no "
"range is detected, returns null."
msgstr ""

#: ../../api-product.rst:330
msgid ":hidden:`isAvailable`"
msgstr ""

#: ../../api-product.rst:334
msgid "bool | null"
msgstr ""

#: ../../api-product.rst:336
msgid ""
"Tries to determine whether or not the product is available / in stock. "
"Returns boolean if determined, or null if not."
msgstr ""

#: ../../api-product.rst:339
msgid ":hidden:`getOfferPrice`"
msgstr ""

#: ../../api-product.rst:345
msgid "Returns price as string, e.g. \"£49.85\" or \"32 kn\"."
msgstr ""

#: ../../api-product.rst:349
msgid ":hidden:`getOfferPriceDetails`"
msgstr ""

#: ../../api-product.rst:355
msgid ""
"Separates offerPrice into components like currency, amount, and full string."
msgstr ""

#: ../../api-product.rst:374
msgid ":hidden:`getSize`"
msgstr ""

#: ../../api-product.rst:380
msgid ""
"If product is available in different sizes, returns array of those sizes. "
"Highly experimental and often unreliable. This field is optional, and needs "
"to be set on the API. See "
":php:meth:`Swader\\\\Diffbot\\\\Api\\\\Product::setSize`."
msgstr ""

#: ../../api-product.rst:383
msgid ":hidden:`getColors`"
msgstr ""

#: ../../api-product.rst:389
msgid ""
"If the product is available in multiple colors, returns the color options. "
"Highly experimental and often unreliable. This field is optional, and needs "
"to be set on the API. See "
":php:meth:`Swader\\\\Diffbot\\\\Api\\\\Product::setColors`."
msgstr ""

#: ../../api-product.rst:392
msgid ":hidden:`getBrand`"
msgstr ""

#: ../../api-product.rst:398
msgid "The brand of the product, as determined by Diffbot."
msgstr ""

#: ../../api-product.rst:401
msgid ":hidden:`getDiscussion`"
msgstr ""

#: ../../api-product.rst:405
msgid ":php:class:`Swader\\\\Diffbot\\\\Entity\\\\Discussion` | null"
msgstr ""

#: ../../api-product.rst:407
msgid ""
"Returns the :php:class:`Swader\\\\Diffbot\\\\Entity\\\\Discussion` found on "
"the product's page (review section). See "
":php:meth:`Swader\\\\Diffbot\\\\Api\\\\Product::setDiscussion` for details "
"and below for usage::"
msgstr ""

#: ../../api-product.rst:421
msgid ""
"For other methods exposed on the "
":php:class:`Swader\\\\Diffbot\\\\Entity\\\\Discussion` entity, see its "
"documentation."
msgstr ""

#~ msgid "Description goes here."
#~ msgstr ""

#~ msgid "Added: September 7th, 2015 Author: Bruno Skvorc <bruno@skvorc.me>"
#~ msgstr ""
